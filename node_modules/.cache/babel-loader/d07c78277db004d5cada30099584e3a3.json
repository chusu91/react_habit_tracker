{"ast":null,"code":"var _jsxFileName = \"/Users/lucy/Desktop/Development/React_DreamCoding/React-basic/habit-tracker/src/components/habits.jsx\";\nimport React, { Component } from \"react\";\nimport Habit from \"./habit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Habits extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      habits: [{\n        id: 1,\n        name: \"Reading\",\n        count: 0\n      }, {\n        id: 2,\n        name: \"Running\",\n        count: 0\n      }, {\n        id: 3,\n        name: \"Coding\",\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      habits[index].count++;\n      this.setState({\n        habits: habits\n      }); //above, new state obj was made. so set state with new object inside {}\n    };\n\n    this.handleDecrement = habit => {\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      this.setState({\n        habits: habits\n      });\n    };\n\n    this.handleDelete = habit => {\n      console.log(`handleDelete ${habit}`);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.habits.map(habit => /*#__PURE__*/_jsxDEV(Habit, {\n        habit: habit,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        onDelete: this.handleDelete\n      }, habit.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Habits;","map":{"version":3,"sources":["/Users/lucy/Desktop/Development/React_DreamCoding/React-basic/habit-tracker/src/components/habits.jsx"],"names":["React","Component","Habit","Habits","state","habits","id","name","count","handleIncrement","habit","index","indexOf","setState","handleDecrement","handleDelete","console","log","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OADM,EAEN;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,SAAf;AAA0BC,QAAAA,KAAK,EAAE;AAAjC,OAFM,EAGN;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,QAAf;AAAyBC,QAAAA,KAAK,EAAE;AAAhC,OAHM;AADF,KADqB;;AAAA,SAa7BC,eAb6B,GAaVC,KAAD,IAAW;AAC3B,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMM,KAAK,GAAGN,MAAM,CAACO,OAAP,CAAeF,KAAf,CAAd;AACAL,MAAAA,MAAM,CAACM,KAAD,CAAN,CAAcH,KAAd;AACA,WAAKK,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEA;AAAV,OAAd,EAJ2B,CAK3B;AACD,KAnB4B;;AAAA,SAqB7BS,eArB6B,GAqBVJ,KAAD,IAAW;AAC3B,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMM,KAAK,GAAGN,MAAM,CAACO,OAAP,CAAeF,KAAf,CAAd;AACA,YAAMF,KAAK,GAAGH,MAAM,CAACM,KAAD,CAAN,CAAcH,KAAd,GAAsB,CAApC;AACA,WAAKK,QAAL,CAAc;AAAER,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACD,KA1B4B;;AAAA,SA4B7BU,YA5B6B,GA4BbL,KAAD,IAAW;AACxBM,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeP,KAAM,EAAlC;AACD,KA9B4B;AAAA;;AAgC7BQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,GAAlB,CAAuBT,KAAD,iBACrB,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,WAAW,EAAE,KAAKD,eAHpB;AAIE,QAAA,WAAW,EAAE,KAAKK,eAJpB;AAKE,QAAA,QAAQ,EAAE,KAAKC;AALjB,SACOL,KAAK,CAACJ,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9C4B;;AAiD/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Habit from \"./habit\";\n\nclass Habits extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n\n  //handleIncrement is variable which has reference value of the next function\n  // Habit component has prop onIncrement and its value is reference of the below function.\n  // 함수는 오브젝트이다. 아래 Habit의 prop으로 전달해준 건, handleIncrement 라는 변수의 값인데,\n  // 이 변수가 가진 값은, 옆 함수 오브젝트의 참조값. 그러니까 주소값. 그래서 주소값을 프롭으로 전달해준 것이다.\n  handleIncrement = (habit) => {\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    habits[index].count++;\n    this.setState({ habits: habits });\n    //above, new state obj was made. so set state with new object inside {}\n  };\n\n  handleDecrement = (habit) => {\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    const count = habits[index].count - 1;\n    this.setState({ habits: habits });\n  };\n\n  handleDelete = (habit) => {\n    console.log(`handleDelete ${habit}`);\n  };\n\n  render() {\n    return (\n      <ul>\n        {this.state.habits.map((habit) => (\n          <Habit\n            key={habit.id}\n            habit={habit}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n            onDelete={this.handleDelete}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Habits;\n"]},"metadata":{},"sourceType":"module"}
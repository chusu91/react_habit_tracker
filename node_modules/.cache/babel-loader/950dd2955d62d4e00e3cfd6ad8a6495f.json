{"ast":null,"code":"var _jsxFileName = \"/Users/lucy/Desktop/Development/React_DreamCoding/React-basic/habit-tracker/src/app.jsx\";\nimport \"./app.css\";\nimport Habits from \"./components/habits\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      habits: [{\n        id: 1,\n        name: \"Reading\",\n        count: 0\n      }, {\n        id: 2,\n        name: \"Running\",\n        count: 0\n      }, {\n        id: 3,\n        name: \"Coding\",\n        count: 0\n      }]\n    };\n\n    this.handleIncrement = habit => {\n      const habits = this.state.habits.map(item => {\n        if (item.id === habit.id) {\n          return { ...habit,\n            count: habit.count + 1\n          }; //{...} deep copy\n          //opy the object and over-write only the count part\n          //new object was made with same data.\n        }\n\n        return item;\n      });\n      this.setState({\n        habits\n      }); //above, new state obj was made. so set state with new object inside {}\n    };\n\n    this.handleDecrement = habit => {\n      const habits = this.state.habits.map(item => {\n        if (item.id === habit.id) {\n          return { ...habit,\n            count: habit.count - 1\n          };\n        }\n\n        return item;\n      });\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      habits[index].count = count < 0 ? 0 : count;\n      this.setState({\n        habits: habits\n      });\n    };\n\n    this.handleDelete = habit => {\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleAdd = name => {\n      const habits = [...this.state.habits, {\n        id: Date.now(),\n        name: name,\n        count: 0\n      }];\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleReset = () => {\n      const habits = this.state.habits.map(habit => {\n        habit.count = 0;\n        return habit;\n      });\n      this.setState({\n        habits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        totalCount: this.state.habits.filter(item => item.count > 0).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Habits, {\n        habits: this.state.habits,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement,\n        onDelete: this.handleDelete,\n        onAdd: this.handleAdd,\n        onReset: this.handleReset\n      }, this.state.habits.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lucy/Desktop/Development/React_DreamCoding/React-basic/habit-tracker/src/app.jsx"],"names":["Habits","React","Component","Navbar","App","state","habits","id","name","count","handleIncrement","habit","map","item","setState","handleDecrement","index","indexOf","handleDelete","filter","handleAdd","Date","now","handleReset","render","length"],"mappings":"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","sourcesContent":["import \"./app.css\";\nimport Habits from \"./components/habits\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 }; //{...} deep copy\n        //opy the object and over-write only the count part\n        //new object was made with same data.\n      }\n      return item;\n    });\n    this.setState({ habits });\n    //above, new state obj was made. so set state with new object inside {}\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count - 1 };\n      }\n      return item;\n    });\n    const index = habits.indexOf(habit);\n    const count = habits[index].count - 1;\n    habits[index].count = count < 0 ? 0 : count;\n    this.setState({ habits: habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  handleAdd = (name) => {\n    const habits = [\n      ...this.state.habits,\n      { id: Date.now(), name: name, count: 0 },\n    ];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      habit.count = 0;\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n\n        <Habits\n          key={this.state.habits.id}\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}